@startuml
title "C4. Контейнеры системы электронного обучения"

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

' Персоны
Person(student, "Обучающийся", "Прохождение курсов, сдача тестов, получение отзывов и сертификатов.")
Person(teacher, "Преподаватель", "Создание и редактирование курсов, мониторинг успеваемости студентов, предоставление обратной связи")
Person(admin, "Администратор", "Управление пользователями, курсами, доступами, статистика по курсам")
Person(support, "Техподдержка", "Решение технических проблем, обновление системы")

' Система
System_Boundary(appElearning, "Система электронного обучения") {
   
    Container(webApp, "Веб-приложение", "React", "Пользовательский интерфейс для прохождения, создания курсов и обратной связи")
    
    ' Инфраструктура
    Container(nginx, "API Gateway", "Nginx", "Обратный прокси и балансировщик нагрузки")
    
    Container(userService, "Контекст пользователя", "Go", "Операции над пользователями, управление данными, общение с SSO")
    Container(contentManagerService, "Сервис управления контентом", "Go", "Создание, редактирование, назначение курсов")
    Container(testManagerService, "Сервис управления тестами", "Go", "Создание, редактирование тестов и экзаменов")
    Container(communicationService, "Сервис обратной связи", "Go", "Обеспечение обратной связи и форумов на курсах")
    Container(statisticsService, "Сервис сбора статистики", "Go", "Собирает данные, нужные для различных видов статистики")
    Container(backupService, "Сервис резервного копирования", "Go", "Собирает данные для РК, обновляет их во внешнем сервисе")
    Container(notificater, "Сервис уведомлений", "Go", "Перенаправляет уведомления")
    Container(crone, "Планировщик", "PHP", "Определяет таймауты событий внутри системы")
    
    ' Базы данных
    ContainerDb(dbUser, "База данных пользователей", "PostgreSQL", "Хранение информации о пользователях")
    ContainerDb(dbContent, "База данных контента", "PostgreSQL", "Хранение материалов и метаданных курсов")
    ContainerDb(dbStatistics, "База данных статистики", "PostgreSQL", "Хранение данных статистики и аналитики")
    
    ' Внешние системы
    System_Ext(SSO, "SingleSignOn", "Сервис единого входа")
    System_Ext(notificaterInternal, "Внешний сервис уведомлений", "Сервис отправки уведомлений")
    System_Ext(backupServiceInternal, "Внешний сервис резервного копирования", "")
    System_Ext(viewVideoService, "Сервис отображения видео", "Потоковая передача видео")
    System_Ext(emailService, "Email Service", "Сервис доставки электронной почты")
    System_Ext(pushService, "Push Notification Service", "Сервис отправки Push-уведомлений")
    System_Ext(mediaStorage, "Хранилище медиа", "Облачное хранилище (например, S3)")
}

' Связи
Rel(student, webApp, "Использует", "HTTPS")
Rel(teacher, webApp, "Использует", "HTTPS")
Rel(admin, webApp, "Использует", "HTTPS")
Rel(support, webApp, "Использует", "HTTPS")

Rel(webApp, nginx, "Запросы API", "HTTPS")

Rel(nginx, userService, "Маршрутизация запросов", "HTTPS")
Rel(nginx, contentManagerService, "Маршрутизация запросов", "HTTPS")
Rel(nginx, testManagerService, "Маршрутизация запросов", "HTTPS")
Rel(nginx, statisticsService, "Маршрутизация запросов", "HTTPS")
Rel(nginx, communicationService, "Маршрутизация запросов", "HTTPS")
Rel(nginx, backupService, "Маршрутизация запросов", "HTTPS")
Rel(nginx, notificater, "Маршрутизация запросов", "HTTPS")

Rel(userService, dbUser, "Чтение/Запись", "Go Database Driver")
Rel(userService, SSO, "Аутентификация", "OAuth")
Rel(userService, notificater, "Отправка уведомлений", "gRPC/REST")
Rel(userService, mediaStorage, "Хранение пользовательских данных", "REST API")

Rel(contentManagerService, dbContent, "Чтение/Запись", "Go Database Driver")
Rel(contentManagerService, viewVideoService, "Доставка контента", "Streaming")
Rel(contentManagerService, notificater, "Отправка уведомлений", "gRPC/REST")
Rel(contentManagerService, communicationService, "Обновление форума", "gRPC/REST")

Rel(testManagerService, dbContent, "Чтение/Запись", "Go Database Driver")
Rel(testManagerService, notificater, "Отправка уведомлений", "gRPC/REST")

Rel(statisticsService, dbStatistics, "Чтение/Запись", "Go Database Driver")

Rel(communicationService, dbContent, "Чтение/Запись", "Go Database Driver")

Rel(notificater, notificaterInternal, "Отправка уведомлений", "REST API")
Rel(notificater, emailService, "Отправка Email", "SMTP/REST API")
Rel(notificater, pushService, "Отправка Push-уведомлений", "REST API")

Rel(backupService, dbStatistics, "Чтение", "Go Database Driver")
Rel(backupService, dbContent, "Чтение", "Go Database Driver")
Rel(backupService, backupServiceInternal, "Резервное копирование", "REST API")

Rel(crone, backupService, "Планирование заданий", "HTTP")

@enduml
