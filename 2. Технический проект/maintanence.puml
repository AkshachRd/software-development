@startuml

title "C4. Обслуживание системы электронного обучения"

package "Облачная инфраструктура" as cloud_infra {
  [Docker] as docker << (C, #FFAAAA) >>
  [Контейнеры] as containers << (C, #FFAAAA) >>
}

package "Система E-learning - обслуживание" as maintenance {
    actor "Администратор" as admin
    actor "Техническая поддержка" as tech_support
    package "Облачные сервисы" as cloud_services {
      [Система мониторинга] as monitoring_service << (C, #FFAAAA) >>
      [Система резервного копирования] as backup_service << (C, #FFAAAA) >>
    }
}

package "Внешние сервисы" as external_services {
    package "Канал уведомлений" as notifications {
        [Email шлюз] as email_service << (C, #FFAAAA) >>
        [Система push-уведомлений] as push_service << (C, #FFAAAA) >>
    }
}

package "Разработка" as development {
    actor "Разработчик" as developer
    [Система контроля версий (GitLab)] as vcs << (C, #FFAAAA) >>
    [CI/CD Gitlab (Ветка main)] as cicd << (C, #FFAAAA) >>
    [CI/CD Gitlab (Ветка dev)] as cicdtest << (C, #FFAAAA) >>

    package "CI/CD Pipeline (PROD)" as build {
      [Build Stage] as build_stage << (C, #FFAAAA) >>
      [Testing Stage] as testing_stage << (C, #FFAAAA) >>
    }
    package "CI/CD Pipeline (TEST)" as build_test {
      [Build Stage Test] as build_stage_test << (C, #FFAAAA) >>
      [Testing Stage Test] as testing_stage_test << (C, #FFAAAA) >>
    }
    
    [Реестр контейнеров] as container_registry << (C, #FFAAAA) >>
}

admin --> monitoring_service : "Мониторинг системы"
admin --> backup_service : "Управление резервными копиями"
tech_support --> monitoring_service : "Отслеживание проблем"
monitoring_service --> email_service : "Уведомления о событиях"
monitoring_service --> push_service : "Push-уведомления"

developer --> vcs : "PUSH коммитов"
vcs --> cicd : "Вызов CI/CD для PROD окружения"
vcs --> cicdtest : "Вызов CI/CD для dev окружения"

build_stage --> testing_stage : "PASS"
build_stage_test --> testing_stage_test : "PASS"
build_stage --> container_registry : "Сборка Docker-образов и PUSH"
build_stage_test --> container_registry : "Сборка Docker-образов и PUSH"

cicd --> build_stage : "Запуск pipeline"
cicdtest --> build_stage_test : "Запуск pipeline"
testing_stage --> container_registry : "PULL Docker-образов"
testing_stage_test --> container_registry : "PULL Docker-образов"

testing_stage --> docker : "PULL обновлений [SSH] (Тэг main)"
testing_stage_test --> docker : "PULL обновлений [SSH] (Тэг dev)"
docker --> container_registry : "PULL новых образов"
docker --> containers : "Развертывание контейнеров"

backup_service --> containers : "Резервное копирование данных"
monitoring_service --> containers : "Проверка состояния"

tech_support --> containers : "Решение технических проблем"
admin --> containers : "Управление приложением"

@enduml
