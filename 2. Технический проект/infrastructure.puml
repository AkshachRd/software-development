@startuml
!define C4P https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master
!includeurl C4P/C4_Container.puml

title C4 Infrastructure Diagram - E-Learning

package "Облачная платформа" as cloud {
    Container(nginx, "Nginx", "Nginx", "Обратный прокси и балансировщик нагрузки")

    package "Kubernetes кластер" as k8s_cluster {
        package "Currency Exchange Pod" as currency_pod {
            Container(currency_service, "Currency Exchange Service", "Java, Spring Boot", "Сервис обработки обмена валют")
        }

        package "User Account Pod" as user_account_pod {
            Container(user_service, "User Account Service", "Java, Spring Boot", "Сервис управления пользователями и их учетными записями")
        }

        package "Transaction Pod" as transaction_pod {
            Container(transaction_service, "Transaction Service", "Java, Spring Boot", "Сервис обработки транзакций")
        }

        package "Rate Pod" as rate_pod {
            Container(rate_service, "Exchange Rate Service", "Java, Spring Boot", "Сервис получения и обновления курсов валют")
        }

        package "API Integration Pod" as api_integration_pod {
            Container(api_service, "API Integration Service", "Java, Spring Boot", "Сервис интеграции с внешними платежными системами")
        }
    }

    Container(RabbitMQ, "Message Broker", "RabbitMQ", "Асинхронная обработка событий")
}

package "Базы данных" as db_cluster {
    package "Регион 1" as region1 {
        Container(db_r1_master, "PostgreSQL Master", "PostgreSQL", "Основная база данных для региона 1")
        Container(db_r1_replica, "PostgreSQL Replica", "PostgreSQL", "Реплика базы данных для региона 1")
    }

    package "Регион N" as regionn {
        Container(db_rn_master, "PostgreSQL Master", "PostgreSQL", "Основная база данных для региона n")
        Container(db_rn_replica, "PostgreSQL Replica", "PostgreSQL", "Реплика базы данных для региона n")
    }
}

System_Ext(payment_system, "Платежная система", "Payment API")
System_Ext(financial_api, "Финансовый API", "ЦБ API")
System_Ext(notification_service, "Сервис уведомлений", "Email API")

' Соединения между компонентами
Rel(nginx, k8s_cluster, "Проксирование запросов", "HTTP")
Rel(k8s_cluster, db_cluster, "Чтение/Запись данных", "JDBC")
Rel(k8s_cluster, RabbitMQ, "Публикация событий", "KaRabbitMQfka Producer API")

Rel_D(db_r1_master, db_r1_replica, "Репликация", "Streaming")
Rel_D(db_rn_master, db_rn_replica, "Репликация", "Streaming")

Rel(currency_service, financial_api, "Получение курсов валют", "REST API")
Rel(api_service, payment_system, "Обработка платежей", "REST API")
Rel(RabbitMQ, notification_service, "Отправка уведомлений", "REST API")

@enduml
